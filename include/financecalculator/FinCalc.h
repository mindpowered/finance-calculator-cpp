// Generated by Haxe 4.1.1
#ifndef INCLUDED_financecalculator_FinCalc
#define INCLUDED_financecalculator_FinCalc

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS1(financecalculator,FinCalc)

namespace financecalculator{


class HXCPP_CLASS_ATTRIBUTES FinCalc_obj : public ::hx::Object
{
	public:
		typedef ::hx::Object super;
		typedef FinCalc_obj OBJ_;
		FinCalc_obj();

	public:
		enum { _hx_ClassId = 0x223c9d28 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="financecalculator.FinCalc")
			{ return ::hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return ::hx::Object::operator new(inSize+extra,false,"financecalculator.FinCalc"); }
		static ::hx::ObjectPtr< FinCalc_obj > __new();
		static ::hx::ObjectPtr< FinCalc_obj > __alloc(::hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(::hx::DynamicArray inArgs);
		//~FinCalc_obj();

		HX_DO_RTTI_ALL;
		::hx::Val __Field(const ::String &inString, ::hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_("FinCalc",e0,6f,fe,dc); }

		 ::Dynamic futureValue(Float presentValue,int numPeriods,Float interestRate,int timesCompoundedPerPeriod,Float depositAmount,bool depositAtBeginning);
		::Dynamic futureValue_dyn();

};

} // end namespace financecalculator

#endif /* INCLUDED_financecalculator_FinCalc */ 
